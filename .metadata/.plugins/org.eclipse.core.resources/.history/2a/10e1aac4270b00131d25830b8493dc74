package com.vnu.parabolicflight;

import com.vnu.parabolicflight.util.Writer;

import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends Activity implements SensorEventListener {

	Button start;
	boolean stop = true;

	Writer writer;

	private SensorManager mSensorManager;
	private Sensor mAccelerometer;
	TextView title, tv, tv1, tv2;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		// get the sensor service
		mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
		// get the accelerometer sensor
		mAccelerometer = mSensorManager
				.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);

		stop = true;
		// writer = new Writer();

		// get textviews
		title = (TextView) findViewById(R.id.name);
		tv = (TextView) findViewById(R.id.xval);
		tv1 = (TextView) findViewById(R.id.yval);
		tv2 = (TextView) findViewById(R.id.zval);

		start = (Button) findViewById(R.id.startButton);
		start.setOnClickListener(new OnClickListener() {

			public void onClick(View arg0) {
				if (stop) {
					// writer.creatNewFile();
					stop = false;
					start.setText("STOP WRITING TO FILE");
				} else {
					stop = true;
					start.setText("START WRITING TO FILE");
				}
			}

		});

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public void onAccuracyChanged(Sensor sensor, int accuracy) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onSensorChanged(SensorEvent event) {
		// TODO Auto-generated method stub
		if (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER) {
			getAccelerometer(event);
		}
	}

	private void getAccelerometer(SensorEvent event) {
		float x = event.values[0];
		float y = event.values[1];
		float z = event.values[2];

		if (stop == false) {
			// writer.appendFile("ACC", x, y, z);
		}

		title.setText("Parabolic Flight");
		tv.setText("X axis" + "\t\t" + x);
		tv1.setText("Y axis" + "\t\t" + y);
		tv2.setText("Z axis" + "\t\t" + z);
	}

	@Override
	protected void onResume() {
		super.onResume();
		mSensorManager.registerListener(this, mAccelerometer,
				SensorManager.SENSOR_DELAY_NORMAL);
	}

	@Override
	protected void onPause() {
		super.onPause();
		mSensorManager.unregisterListener(this);
	}
}
